CREATE TABLE `onSiteTrades_Adyen_Orders` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `onSiteTradeId` INT(10) UNSIGNED NOT NULL COMMENT '->onSiteTrades_Trades.id',
  `expiresAt` INT(255) DEFAULT NULL COMMENT 'UNIX timestamp when the order expires. Used to cancel the trade in a cron if payment hasn''t been completed until this time',
  `cartId` INT(11) UNSIGNED DEFAULT NULL COMMENT '->carts_carts.id;
If a cartId is linked to this order, clear the order items from the cart when order is complete',
  `buyerCountry` CHAR(2) DEFAULT NULL COMMENT 'Set when the purchase is completed',
  `buyerIP` VARCHAR(39) DEFAULT NULL,
  `paymentType` INT(255) NOT NULL COMMENT '0=Adyen payment session with splits, 1=Adyen wallet transfers for each item',
  `paymentStatus` INT(255) UNSIGNED DEFAULT 0 COMMENT 'Used to determine whether the payment is being processed. This is used so the trade will not be canceled and that the user can create a new order.
Refer to the source code documentation for constants',
  `paymentCurrency` SMALLINT(255) NOT NULL COMMENT '\\CSDEALS\\Config\\Currencies',
  `isPayWithBitcoin` SMALLINT(255) NOT NULL DEFAULT 0 COMMENT 'Flag 1/0',
  `orderDirectTotal` DECIMAL(10, 2) NOT NULL COMMENT 'How much the buyer will pay in paymentCurrency. This is for items where seller is directly accepting paymentCurrency',
  `orderConvertedTotal` DECIMAL(10, 2) DEFAULT NULL COMMENT 'How much buyer will pay in paymentCurrency in addition to orderDirectTotal for items whose sellers do not accept the currency. Already includes any currency conversion fees, rounded up to the closes cent on per item basis',
  `orderBuyerPaymentFee` DECIMAL(10, 2) DEFAULT 0.00 COMMENT 'Marketplace fee in payment currency plus possible surcharge for payment method',
  `currencyConversionFeePercent` DECIMAL(4, 3) NOT NULL COMMENT '0.01 would be 1%',
  `rateUsdEur` DECIMAL(12, 8) NOT NULL,
  `rateBitcoinEur` DECIMAL(12, 2) DEFAULT NULL COMMENT 'Set when paymentCurrency=0',
  `adyenPaymentMethod` VARCHAR(255) DEFAULT NULL COMMENT 'Payment method on Adyen',
  `adyenSessionRequestJSON` LONGTEXT BINARY CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'Request data to Adyen''s API for creating the payment session',
  `adyenSessionRequestResponse` LONGTEXT BINARY CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT 'Response data from Adyen''s API for creating the payment session',
  `adyenPaymentSessionId` VARCHAR(1024) DEFAULT NULL COMMENT 'Used to continue the order if we get redirected back',
  `adyenOrderRequestJSON` LONGTEXT DEFAULT NULL COMMENT 'Request data to Adyen''s API for creating the payment order',
  `adyenOrderResponseJSON` LONGTEXT DEFAULT NULL COMMENT 'Response data from Adyen''s API for creating the payment order',
  `adyenOrderPspReference` VARCHAR(25) DEFAULT NULL COMMENT 'PSPReference received from Adyen for creating the order',
  `adyenOrderData` LONGTEXT DEFAULT NULL COMMENT 'Adyen order data received from Adyen',
  `fraudScoreOffset` INT(255) DEFAULT 0 COMMENT 'What fraudOffset is sent to Adyen based on local fraud calculations',
  `appliedFraudScoreSettings` LONGTEXT DEFAULT NULL COMMENT 'Generated by code. For analysis',
  `paymentMethodsJSON` LONGTEXT DEFAULT NULL COMMENT 'We need to save it because we need to be able to fetch it after the order has been created after pageloads',
  `paymentDetailsRequests` LONGTEXT DEFAULT NULL COMMENT 'JSON Array of request datas sent to Adyen payment details API endpoint',
  `paymentDetailsResults` LONGTEXT DEFAULT NULL COMMENT 'JSON array of results we get after calling /payments/details',
  `paymentRequests` LONGTEXT DEFAULT NULL,
  `paymentResults` LONGTEXT DEFAULT NULL COMMENT 'The results we get when we call /payments',
  `paymentPspReference` VARCHAR(32) DEFAULT NULL COMMENT 'Adyen payment PSP reference. Received and persisted here after a payment is submitted',
  `adyenOrderRemainingAmount` DECIMAL(10, 2) DEFAULT NULL COMMENT 'currently unused. Was used for Adyen order system',
  `orderTotal` DECIMAL(10, 2) GENERATED ALWAYS AS (`orderDirectTotal` + `orderConvertedTotal` + `orderBuyerPaymentFee`) STORED COMMENT 'How much the buyer will pay in paymentCurrency after currency conversion fees (this is orderTotalEUR + orderTotalUSD) where either currency is converted at current rate',
  PRIMARY KEY (id, onSiteTradeId)
)
ENGINE = INNODB,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'After the Adyen integration, every marketplace real money order is inserted into this table.';

ALTER TABLE `onSiteTrades_Adyen_Orders` 
  ADD UNIQUE INDEX onSiteTrade(onSiteTradeId);

ALTER TABLE `onSiteTrades_Adyen_Orders` 
  ADD UNIQUE INDEX adyenPaymentSessionId(adyenPaymentSessionId);

ALTER TABLE `onSiteTrades_Adyen_Orders` 
  ADD CONSTRAINT `onSiteTrades_Adyen_Orders_cartId` FOREIGN KEY (cartId)
    REFERENCES carts_carts(id) ON DELETE SET NULL;

ALTER TABLE `onSiteTrades_Adyen_Orders` 
  ADD CONSTRAINT `onSiteTrades_Adyen_Orders_onSiteTradeId` FOREIGN KEY (onSiteTradeId)
    REFERENCES onSiteTrades_Trades(id);